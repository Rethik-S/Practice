using System.Data;
using System.Globalization;
using System.Security.Cryptography;
using System.Windows.Forms.VisualStyles;
using Syncfusion.XlsIO;
using Syncfusion.XlsIO.Implementation;
using Syncfusion.XlsIO.Implementation.PivotAnalysis;

namespace XLSIO_task;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();
        InitializeComponents();
    }
    private Button btnCreate;
    private Label label;
    private void InitializeComponents()
    {
        btnCreate = new Button();
        label = new Label();

        //Label
        label.Location = new System.Drawing.Point(0, 40);
        label.Size = new System.Drawing.Size(426, 35);
        label.Text = "Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that MS Excel Viewer or MS Excel is required to view the resultant document.";
        label.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
        //Button
        btnCreate.Location = new System.Drawing.Point(180, 110);
        btnCreate.Size = new System.Drawing.Size(85, 26);
        btnCreate.Text = "Create Document";
        btnCreate.Click += new EventHandler(btnCreate_Click);

        //Create Spreadsheet
        ClientSize = new System.Drawing.Size(450, 150);
        Controls.Add(label);
        Controls.Add(btnCreate);
        Text = "Create Spreadsheet";

    }
    private void btnCreate_Click(object sender, EventArgs e)
    {
        using (ExcelEngine excelEngine = new ExcelEngine())
        {
            IApplication application = excelEngine.Excel;
            application.DefaultVersion = ExcelVersion.Xlsx;

            //Create a workbook
            IWorkbook workbook = application.Workbooks.Create(0);

            IWorksheet salesReportSheet = workbook.Worksheets.Create("Sales Report");
            IWorksheet dataSheet = workbook.Worksheets.Create("Data");

            //data table
            dataSheet.SetColumnWidth(1, 7.78);
            dataSheet.Range["A1"].Text = "Months";
            dataSheet.Range["A2"].Text = "Jan";
            dataSheet.Range["A3"].Text = "Feb";
            dataSheet.Range["A4"].Text = "Mar";
            dataSheet.Range["A5"].Text = "Apr";
            dataSheet.Range["A6"].Text = "May";
            dataSheet.Range["A7"].Text = "June";
            dataSheet.Range["A8"].Text = "Jul";
            dataSheet.Range["A9"].Text = "Aug";
            dataSheet.Range["A10"].Text = "Sep";
            dataSheet.Range["A11"].Text = "Oct";
            dataSheet.Range["A12"].Text = "Nov";
            dataSheet.Range["A13"].Text = "Dec";

            dataSheet.Range["B1"].Text = "Internet Sales Amount";
            dataSheet.Range["B2"].Number = 226170;
            dataSheet.Range["B3"].Number = 212259;
            dataSheet.Range["B4"].Number = 181079;
            dataSheet.Range["B5"].Number = 188809;
            dataSheet.Range["B6"].Number = 198195;
            dataSheet.Range["B7"].Number = 235524;
            dataSheet.Range["B8"].Number = 185786;
            dataSheet.Range["B9"].Number = 196745;
            dataSheet.Range["B10"].Number = 164897;
            dataSheet.Range["B11"].Number = 175673;
            dataSheet.Range["B12"].Number = 212896;
            dataSheet.Range["B13"].Number = 325634;

            dataSheet.Range["C1"].Text = "Reseller Sales Amount";
            dataSheet.Range["C2:C13"].NumberFormat = "_($* #,##0.00_)";
            dataSheet.Range["C2"].Number = 170234;
            dataSheet.Range["C3"].Number = 189456;
            dataSheet.Range["C4"].Number = 168795;
            dataSheet.Range["C5"].Number = 143567;
            dataSheet.Range["C6"].Number = 163567;
            dataSheet.Range["C7"].Number = 163546;
            dataSheet.Range["C8"].Number = 143787;
            dataSheet.Range["C9"].Number = 149898;
            dataSheet.Range["C10"].Number = 153784;
            dataSheet.Range["C11"].Number = 164289;
            dataSheet.Range["C12"].Number = 172453;
            dataSheet.Range["C13"].Number = 223430;

            dataSheet.Range["D1"].Text = "Unit Price";
            dataSheet.Range["D2:D13"].NumberFormat = "_($* #,##0.00_)";
            dataSheet.Range["D2"].Number = 202;
            dataSheet.Range["D3"].Number = 204;
            dataSheet.Range["D4"].Number = 191;
            dataSheet.Range["D5"].Number = 223;
            dataSheet.Range["D6"].Number = 203;
            dataSheet.Range["D7"].Number = 185;
            dataSheet.Range["D8"].Number = 198;
            dataSheet.Range["D9"].Number = 196;
            dataSheet.Range["D10"].Number = 220;
            dataSheet.Range["D11"].Number = 218;
            dataSheet.Range["D12"].Number = 299;
            dataSheet.Range["D13"].Number = 185;

            dataSheet.Range["E1"].Text = "Customers";
            dataSheet.Range["E2"].Number = 1861;
            dataSheet.Range["E3"].Number = 1522;
            dataSheet.Range["E4"].Number = 1410;
            dataSheet.Range["E5"].Number = 1488;
            dataSheet.Range["E6"].Number = 1781;
            dataSheet.Range["E7"].Number = 2155;
            dataSheet.Range["E8"].Number = 1657;
            dataSheet.Range["E9"].Number = 1767;
            dataSheet.Range["E10"].Number = 1448;
            dataSheet.Range["E11"].Number = 1556;
            dataSheet.Range["E12"].Number = 1928;
            dataSheet.Range["E13"].Number = 2956;


            dataSheet.Range["H1"].Text = "Months";
            dataSheet.Range["H2"].Text = "Jan";
            dataSheet.Range["H3"].Text = "Feb";
            dataSheet.Range["H4"].Text = "Mar";
            dataSheet.Range["H5"].Text = "Apr";
            dataSheet.Range["H6"].Text = "May";
            dataSheet.Range["H7"].Text = "Jun";
            dataSheet.Range["H8"].Text = "Jul";
            dataSheet.Range["H9"].Text = "Aug";
            dataSheet.Range["H10"].Text = "Sep";
            dataSheet.Range["H11"].Text = "Oct";
            dataSheet.Range["H12"].Text = "Nov";
            dataSheet.Range["H13"].Text = "Dec";


            //Total
            dataSheet.Range["A14"].Text = "Total";
            dataSheet.Range["B14"].Formula = "=SUM(B2:B13)";
            dataSheet.Range["B14"].NumberFormat = "_($* #,##0.00_)";
            dataSheet.Range["C14"].Formula = "=SUM(C2:C13)";
            dataSheet.Range["D14"].Formula = "=AVERAGE(D2:D13)";
            dataSheet.Range["E14"].Formula = "=SUM(E2:E13)";

            //Sales
            dataSheet.Range["B17"].Text = "2018 Sales";
            dataSheet.Range["B18"].Text = "2018 Sales";
            dataSheet.Range["B19"].Text = "Gain %";
            //Sales values
            dataSheet.Range["C17"].CellStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
            dataSheet.Range["C17"].Number = 3845634;
            dataSheet.Range["C17:C18"].NumberFormat = "_($* #,##0.00_)";

            dataSheet.Range["C18"].Formula = "=B14+C14";

            dataSheet.Range["C19"].Formula = "=(C18-C17)/10000000";
            dataSheet.Range["C19"].NumberFormat = "#.##%";


            IStyle headerStyle = workbook.Styles.Add("HeaderStyle");
            headerStyle.BeginUpdate();
            headerStyle.Color = Color.FromArgb(198, 224, 180);
            headerStyle.Font.Bold = true;
            headerStyle.EndUpdate();

            IStyle footerStyle = workbook.Styles.Add("FooterStyle");
            footerStyle.BeginUpdate();
            footerStyle.Color = Color.FromArgb(198, 224, 180);
            footerStyle.Font.Bold = true;
            footerStyle.EndUpdate();

            IStyle bodyStyle = workbook.Styles.Add("BodyStyle");
            bodyStyle.BeginUpdate();
            bodyStyle.NumberFormat = "_($* #,##0.00_)";
            bodyStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
            bodyStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
            bodyStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
            bodyStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
            bodyStyle.EndUpdate();

            dataSheet.Range["A21"].Text = "Syncfusion\nXlsIO\nDocIO\nPDF";
            dataSheet.Range["A21"].RowHeight = 67;
            dataSheet.Range["A21"].ColumnWidth = 9;

            dataSheet.Range["A1:E1"].CellStyle = headerStyle;
            dataSheet.Range["H1"].CellStyle = headerStyle;
            dataSheet.Range["A14:E14"].CellStyle = footerStyle;
            dataSheet.Range["B2:B13"].CellStyle = bodyStyle;

            //Create color scale for the data in specified range
            IConditionalFormats conditionalFormats = dataSheet.Range["D2:D13"].ConditionalFormats;
            IConditionalFormat conditionalFormat = conditionalFormats.AddCondition();
            conditionalFormat.FormatType = ExcelCFType.ColorScale;
            IColorScale colorScale = conditionalFormat.ColorScale;

            //Sets 3 - color scale and its constraints
            colorScale.SetConditionCount(3);
            colorScale.Criteria[0].FormatColorRGB = Color.FromArgb(237, 90, 19);
            colorScale.Criteria[0].Type = ConditionValueType.LowestValue;
            colorScale.Criteria[0].Value = "0";

            colorScale.Criteria[1].FormatColorRGB = Color.FromArgb(237, 120, 50);
            colorScale.Criteria[1].Type = ConditionValueType.Percentile;
            colorScale.Criteria[1].Value = "50";

            colorScale.Criteria[2].FormatColorRGB = Color.FromArgb(237, 220, 120);
            colorScale.Criteria[2].Type = ConditionValueType.HighestValue;
            colorScale.Criteria[2].Value = "0";

            conditionalFormat.FirstFormulaR1C1 = "=R[1]C[0]";
            conditionalFormat.SecondFormulaR1C1 = "=R[1]C[1]";

            //Create a hyperlink for a website
            IHyperLink hyperlink = dataSheet.HyperLinks.Add(dataSheet.Range["E17"]);
            hyperlink.Type = ExcelHyperLinkType.Url;
            hyperlink.Address = "https://help.syncfusion.com/file-formats/xlsio/overview";
            hyperlink.TextToDisplay = "SyncfusionXlsIO";

            ITextBoxShape shape1 = dataSheet.TextBoxes.AddTextBox(22, 1, 30, 120);
            shape1.Text = "Syncfusion";

            IShape ARROW = dataSheet.Shapes.AddAutoShapes(AutoShapeType.Line, 23, 1, 80, 0);
            IShapeLineFormat lineFormat = ARROW.Line;
            lineFormat.BeginArrowheadWidth = ExcelShapeArrowWidth.ArrowHeadNarrow;
            lineFormat.EndArrowHeadStyle = ExcelShapeArrowStyle.LineArrow;
            lineFormat.ForeColor = Color.FromArgb(68, 114, 196);

            // lineFormat.BackColor = Color.AliceBlue;

            ARROW.Left = 60;
            ITextBoxShape shape2 = dataSheet.TextBoxes.AddTextBox(27, 1, 40, 120);
            shape2.Text = "XlsIO";


            //Format the control
            shape1.Fill.BackColor = Color.White;
            IFill fill = shape1.Fill;

            //Set fill color
            fill.ForeColor = Color.FromArgb(68, 114, 196);
            fill.BackColor = Color.White;


            //Applying conditional formatting to "A1"
            IConditionalFormats condition = dataSheet.Range["E2:E13"].ConditionalFormats;
            IConditionalFormat condition1 = condition.AddCondition();

            //Represents conditional format rule that the value in target range should be between 10 and 20
            condition1.FormatType = ExcelCFType.CellValue;
            condition1.Operator = ExcelComparisonOperator.Between;
            condition1.FirstFormula = "1500";
            condition1.SecondFormula = "1750";

            //Setting back color and font style to be applied for target range
            condition1.BackColorRGB = Color.FromArgb(0, 176, 80);
            condition1.FontColor = ExcelKnownColors.Red;
            condition1.IsBold = true;

            //months conditional formatting
            IConditionalFormats formats = dataSheet["A1:A100"].ConditionalFormats;
            IConditionalFormats monthsFormats = dataSheet["H1:H100"].ConditionalFormats;

            IConditionalFormat format1 = formats.AddCondition();
            IConditionalFormat format2 = formats.AddCondition();
            IConditionalFormat format3 = formats.AddCondition();
            IConditionalFormat format4 = formats.AddCondition();
            IConditionalFormat format5 = formats.AddCondition();

            format1.FormatType = ExcelCFType.SpecificText;
            format2.FormatType = ExcelCFType.SpecificText;
            format3.FormatType = ExcelCFType.SpecificText;
            format4.FormatType = ExcelCFType.SpecificText;
            format5.FormatType = ExcelCFType.SpecificText;

            format1.FontColor = ExcelKnownColors.Red;
            format2.FontColor = ExcelKnownColors.Red;
            format3.FontColor = ExcelKnownColors.Red;
            format4.FontColor = ExcelKnownColors.Red;
            format5.FontColor = ExcelKnownColors.Red;

            format1.Text = "Jan";
            format2.Text = "Mar";
            format3.Text = "Apr";
            format4.Text = "May";
            format5.Text = "Aug";

            //H coulomn month
            IConditionalFormat format6 = monthsFormats.AddCondition();
            IConditionalFormat format7 = monthsFormats.AddCondition();
            IConditionalFormat format8 = monthsFormats.AddCondition();
            format6.FormatType = ExcelCFType.SpecificText;
            format7.FormatType = ExcelCFType.SpecificText;
            format8.FormatType = ExcelCFType.SpecificText;

            format6.BackColorRGB = Color.FromArgb(0, 176, 80);
            format7.BackColorRGB = Color.FromArgb(0, 176, 80);
            format8.BackColorRGB = Color.FromArgb(0, 176, 80);

            format6.BottomBorderStyle = ExcelLineStyle.Thin;
            format6.TopBorderStyle = ExcelLineStyle.Thin;
            format6.LeftBorderStyle = ExcelLineStyle.Thin;
            format6.RightBorderStyle = ExcelLineStyle.Thin;

            format6.BottomBorderColor = ExcelKnownColors.Red;
            format6.TopBorderColor = ExcelKnownColors.Red;
            format6.LeftBorderColor = ExcelKnownColors.Red;
            format6.RightBorderColor = ExcelKnownColors.Red;
            format6.Text = "Jan";

            format7.BottomBorderStyle = ExcelLineStyle.Thin;
            format7.TopBorderStyle = ExcelLineStyle.Thin;
            format7.LeftBorderStyle = ExcelLineStyle.Thin;
            format7.RightBorderStyle = ExcelLineStyle.Thin;

            format7.BottomBorderColor = ExcelKnownColors.Red;
            format7.TopBorderColor = ExcelKnownColors.Red;
            format7.LeftBorderColor = ExcelKnownColors.Red;
            format7.RightBorderColor = ExcelKnownColors.Red;
            format7.Text = "Jun";

            format8.BottomBorderStyle = ExcelLineStyle.Thin;
            format8.TopBorderStyle = ExcelLineStyle.Thin;
            format8.LeftBorderStyle = ExcelLineStyle.Thin;
            format8.RightBorderStyle = ExcelLineStyle.Thin;
            format8.BottomBorderColor = ExcelKnownColors.Red;
            format8.TopBorderColor = ExcelKnownColors.Red;
            format8.LeftBorderColor = ExcelKnownColors.Red;
            format8.RightBorderColor = ExcelKnownColors.Red;
            format8.Text = "Jul";

            //sale title

            salesReportSheet.Range["A1"].Text = "Yearly Sales";

            salesReportSheet.Range["A1:G1"].Merge();

            IStyle title = workbook.Styles.Add("Title");
            title.BeginUpdate();
            title.HorizontalAlignment = ExcelHAlign.HAlignCenter;
            title.VerticalAlignment = ExcelVAlign.VAlignCenter;
            title.Font.Bold = true;
            title.EndUpdate();
            salesReportSheet.Range["A1"].CellStyle = title;
            salesReportSheet.Range["A1"].CellStyle.Font.Size = 14;
            salesReportSheet.Range["A1"].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
            salesReportSheet.Range["A1"].CellStyle.Color = Color.FromArgb(155, 194, 230);

            IDataValidation validation = dataSheet.Range["H2:H13"].DataValidation;
            validation.ListOfValues = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec" };

            //Create a Chart
            IChartShape chart1 = salesReportSheet.Charts.Add();
            //Set Chart Type
            chart1.ChartType = ExcelChartType.Bar_Clustered;
            //Set data range in the worksheet
            //Maximum value in the axis
            // chart1.DataRange = dataSheet.Range["A2:B13"];
            chart1.TopRow = 2;
            chart1.LeftColumn = 1;
            chart1.RightColumn = 8;
            chart1.BottomRow = 13;

            IChartSerie product1 = chart1.Series.Add("Internet Sales Amount");
            product1.Values = dataSheet.Range["B2:B13"];
            product1.CategoryLabels = dataSheet.Range["A2:A13"];

            // chart1.PrimaryValueAxis.DisplayUnit = ExcelChartDisplayUnit.HundredThousands;
            chart1.PrimaryValueAxis.NumberFormat = "$#,###";
            chart1.PrimaryValueAxis.HasMajorGridLines = false;
            // chart1.HasLegend = false;
            chart1.Name = "Internet Sales Amount";
            chart1.ChartTitle = "Internet Sales Amount";
            chart1.ChartTitleArea.Size = 18;
            chart1.PrimaryValueAxis.Title = "Axis Title";
            chart1.PrimaryCategoryAxis.Title = "Axis Title";
            chart1.PrimaryCategoryAxis.TextRotationAngle = -45;
            chart1.Legend.TextArea.Size = 12;

            // chart1.SecondaryCategoryAxis.Title = "Axis Title";

            //Axis title area text angle rotation
            chart1.PrimaryCategoryAxis.TitleArea.TextRotationAngle = -90;
            chart1.ChartArea.Border.LinePattern = ExcelChartLinePattern.None;

            // Customize the appearance of the bars
            chart1.Legend.Position = ExcelLegendPosition.Bottom;
            foreach (IChartSerie series in chart1.Series)
            {
                series.SerieFormat.Fill.ForeColor = Color.FromArgb(68, 114, 196); // Set bar color to blue
                series.SerieFormat.Fill.Transparency = 0; // Set transparency to fully opaque
            }

            //Create a Chart
            IChartShape chart2 = salesReportSheet.Charts.Add();
            chart2.PrimaryValueAxis.HasMajorGridLines = false;
            dataSheet.Columns[1].ColumnWidth = 15; // Adjust the width of column B as needed
            dataSheet.Columns[2].ColumnWidth = 15;
            //Set Chart Type
            chart2.HasLegend = false;
            chart2.ChartType = ExcelChartType.Scatter_Line_Markers;

            //Set data range in the worksheet
            chart2.PrimaryValueAxis.HasMajorGridLines = false;
            // chart2.PrimaryValueAxis.DisplayUnit = ExcelChartDisplayUnit.HundredThousands;
            chart2.PrimaryValueAxis.NumberFormat = "$#,###";
            chart2.TopRow = 20;
            chart2.LeftColumn = 1;
            chart2.RightColumn = 8;
            chart2.BottomRow = 32;
            chart2.Name = "Internet Sales vs Reseller Sales";
            //Set Chart Title
            chart2.ChartTitle = "Internet Sales vs Reseller Sales";

            //Set first serie
            IChartSerie productA = chart2.Series.Add("Internet Sales Amount");
            productA.Values = dataSheet.Range["B2:B13"];
            productA.CategoryLabels = dataSheet.Range["A2:A13"];

            //Set second serie
            IChartSerie productB = chart2.Series.Add("Reseller Sales Amount");
            productB.Values = dataSheet.Range["C2:C13"];
            productB.CategoryLabels = dataSheet.Range["A2:A13"];
            chart2.Legend.Position = ExcelLegendPosition.Bottom;
            chart2.ChartArea.Border.LinePattern = ExcelChartLinePattern.None;


            //table
            salesReportSheet.Range["K1"].Text = "Yearly Sales";
            salesReportSheet.Range["K2"].Number = 400;
            salesReportSheet.Range["K3"].Number = 300;
            salesReportSheet.Range["K4"].Number = 500;
            salesReportSheet.Range["K5"].Number = 50;
            salesReportSheet.Range["K6"].Number = 200;



            salesReportSheet.Range["L1"].Text = "Expense";
            salesReportSheet.Range["L2"].Number = 36;
            salesReportSheet.Range["L3"].Number = 75;
            salesReportSheet.Range["L4"].Number = 75;
            salesReportSheet.Range["L5"].Number = 24;
            salesReportSheet.Range["L6"].Number = 64;

            salesReportSheet.Range["M1"].Text = "Growth";
            salesReportSheet.Range["M2"].Number = 45;
            salesReportSheet.Range["M3"].Number = 32;
            salesReportSheet.Range["M4"].Number = 64;
            salesReportSheet.Range["M5"].Number = 52;
            salesReportSheet.Range["M6"].Number = 75;
            salesReportSheet.Range["M2:M6"].NumberFormat = ".00%";


            IListObject table = salesReportSheet.ListObjects.Create("Table1", salesReportSheet["K1:M6"]);
            table.ShowTotals = true;
            table.Columns[0].TotalsRowLabel = "Total";
            table.Columns[1].TotalsCalculation = ExcelTotalsCalculation.None;
            table.Columns[2].TotalsCalculation = ExcelTotalsCalculation.Sum;

            salesReportSheet.Range["K1:M7"].CellStyle.Font.RGBColor = Color.FromArgb(0, 112, 192);
            salesReportSheet.Range["K1:M1"].CellStyle.Color = Color.FromArgb(0, 176, 240);
            salesReportSheet.Range["K2:K7"].CellStyle.Color = Color.FromArgb(150, 198, 206);
            salesReportSheet.Range["L2:L7"].CellStyle.Color = Color.FromArgb(0, 176, 80);
            salesReportSheet.Range["M2:M7"].CellStyle.Color = Color.FromArgb(208, 196, 154);



            //display blocks
            IStyle blockTitle = workbook.Styles.Add("blockTitle");
            blockTitle.BeginUpdate();
            blockTitle.Font.Size = 18;
            blockTitle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
            blockTitle.Font.Bold = true;
            blockTitle.EndUpdate();

            IStyle blockDesc = workbook.Styles.Add("blockDesc");
            blockDesc.BeginUpdate();
            blockDesc.Font.Size = 11;
            blockDesc.HorizontalAlignment = ExcelHAlign.HAlignCenter;
            blockDesc.Font.Color = ExcelKnownColors.Grey_50_percent;
            blockDesc.EndUpdate();

            salesReportSheet.SetRowHeight(1, 22.5);
            salesReportSheet.SetRowHeight(16, 3);
            salesReportSheet.SetColumnWidth(1, 2);
            salesReportSheet.SetColumnWidth(2, 11);
            salesReportSheet.SetColumnWidth(3, 11);
            salesReportSheet.SetColumnWidth(4, 0.81);
            salesReportSheet.SetColumnWidth(5, 11);
            salesReportSheet.SetColumnWidth(6, 11);
            salesReportSheet.SetColumnWidth(7, 3);

            salesReportSheet.Range["B14"].CellStyle = blockTitle;
            salesReportSheet.Range["B15"].CellStyle = blockDesc;
            salesReportSheet.Range["B14"].Formula = "=Data!E14";
            salesReportSheet.Range["B14"].CellStyle.Color = Color.FromArgb(155, 194, 230);
            salesReportSheet.Range["B14"].CellStyle.Font.Color = ExcelKnownColors.Red;
            salesReportSheet.Range["B14"].CellStyle.NumberFormat = "$#,###.00";
            salesReportSheet.Range["B14:C14"].Merge();
            salesReportSheet.Range["B15"].Text = "Sales Amount";
            salesReportSheet.Range["B15:C15"].Merge();
            salesReportSheet.Range["B15"].CellStyle.Color = Color.FromArgb(155, 194, 230);

            salesReportSheet.Range["E14"].CellStyle = blockTitle;
            salesReportSheet.Range["E15"].CellStyle = blockDesc;
            salesReportSheet.Range["E14"].Formula = "=Data!D14";
            salesReportSheet.Range["E14"].NumberFormat = "$##.00";
            salesReportSheet.Range["E14"].CellStyle.Color = Color.FromArgb(244, 176, 132);
            salesReportSheet.Range["E14"].CellStyle.Font.Underline = ExcelUnderline.Single;
            salesReportSheet.Range["E14"].CellStyle.Font.Italic = true;
            salesReportSheet.Range["E14:F14"].Merge();
            salesReportSheet.Range["E15"].Text = "Average Unit Price";
            salesReportSheet.Range["E15:F15"].Merge();
            salesReportSheet.Range["E15"].CellStyle.Color = Color.FromArgb(244, 176, 132);

            salesReportSheet.Range["B17"].CellStyle = blockTitle;
            salesReportSheet.Range["B18"].CellStyle = blockDesc;
            salesReportSheet.Range["B17"].Formula = "=Data!C19";
            salesReportSheet.Range["B17"].CellStyle.Color = Color.FromArgb(255, 217, 102);
            salesReportSheet.Range["B17"].NumberFormat = "#.##%";
            salesReportSheet.Range["B17:C17"].Merge();
            salesReportSheet.Range["B18"].Text = "Gross Profit Margin";
            salesReportSheet.Range["B18:C18"].Merge();
            salesReportSheet.Range["B18"].CellStyle.Color = Color.FromArgb(255, 217, 102);

            salesReportSheet.Range["E17"].CellStyle = blockTitle;
            salesReportSheet.Range["E18"].CellStyle = blockDesc;
            salesReportSheet.Range["E17"].Formula = "=Data!E14";
            salesReportSheet.Range["E17"].NumberFormat = "#,###";
            salesReportSheet.Range["E17"].CellStyle.Color = Color.FromArgb(169, 208, 142);
            salesReportSheet.Range["E17"].CellStyle.Font.RGBColor = Color.FromArgb(0, 176, 80);
            salesReportSheet.Range["E17:F17"].Merge();
            salesReportSheet.Range["E18"].Text = "Customer Count";
            salesReportSheet.Range["E18:F18"].Merge();
            salesReportSheet.Range["E18"].CellStyle.Color = Color.FromArgb(169, 208, 142);


            // List<String> months = new List<string>{"jan","feb","mar","apr","may","jun","jul","aug","sep","oct"};

            //Auto-fit the columns
            salesReportSheet.UsedRange.AutofitColumns();
            dataSheet.UsedRange.AutofitColumns();
            salesReportSheet.Range["M1"].ColumnWidth = 10;
            salesReportSheet.IsGridLinesVisible = false;

            // workbook.CalculationOptions.CalculationMode = ExcelCalculationMode.Manual;
            //Saving the workbook as stream
            // FileStream stream = new FileStream("task.xlsx", FileMode.Create, FileAccess.ReadWrite);
            workbook.SaveAs("task.xlsx");
            // stream.Dispose();
        }
    }
}
